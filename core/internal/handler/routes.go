// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"cherry-disk/core/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/from/:name",
				Handler: CoreHandler(serverCtx),
			},
		},
	)

	//用户
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: UserRegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: UserLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/detail",
				Handler: UserDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register/send/code",
				Handler: MailCodeSendRegisterHandler(serverCtx),
			},
			//分享文件详细
			{
				Method:  http.MethodGet,
				Path:    "/share/basic/detail",
				Handler: ShareBasicDetailHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/neko",
					Handler: CoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/upload",
					Handler: FileUploadHandler(serverCtx),
				},
				{
					//上传数据桶
					Method:  http.MethodPost,
					Path:    "/file/upload/chunk",
					Handler: FileUploadChunkHandler(serverCtx),
				},
				{
					//上传数据桶成功
					Method:  http.MethodPost,
					Path:    "/file/upload/chunk/complete",
					Handler: FileUploadChunkCompleteHandler(serverCtx),
				},

				{
					// TODO no tested
					Method:  http.MethodPost,
					Path:    "/user/repository/save",
					Handler: UserRepositorySaveHandler(serverCtx),
				},
				{
					// TODO no tested
					Method:  http.MethodPost,
					Path:    "/user/file/list",
					Handler: UserFileListHandler(serverCtx),
				},
				{
					//路径创建
					// TODO no tested
					Method:  http.MethodPost,
					Path:    "/user/folder/create",
					Handler: UserFolderCreateHandler(serverCtx),
				},
				{
					//创建个人仓库
					Method:  http.MethodPost,
					Path:    "/share/basic/create",
					Handler: ShareBasicCreateHandler(serverCtx),
				},

				{
					//文件改名
					Method:  http.MethodPost,
					Path:    "/user/file/name/update",
					Handler: UserFileNameUpdateHandler(serverCtx),
				},
				{
					//移动文件
					Method:  http.MethodPost,
					Path:    "/user/file/move",
					Handler: UserFileMoveHandler(serverCtx),
				},
				{
					//路径列表
					Method:  http.MethodPost,
					Path:    "/user/folder/list",
					Handler: UserFolderListHandler(serverCtx),
				},
			}...,
		),
	)
}
